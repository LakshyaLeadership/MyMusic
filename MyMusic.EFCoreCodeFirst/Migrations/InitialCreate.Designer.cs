// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMusic.EFCoreCodeFirst;

namespace MyMusic.EFCoreCodeFirst.Migrations
{
    [DbContext(typeof(MyMusicContext))]
    [Migration("20190904113705_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyMusic.EFCoreCodeFirst.Album", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumLogo");

                    b.Property<long?>("ArtistId");

                    b.Property<string>("Copyright");

                    b.Property<DateTime>("Created");

                    b.Property<bool>("IsMasteredForItunes");

                    b.Property<string>("ItunesReview");

                    b.Property<DateTime?>("LastModified");

                    b.Property<float>("Price");

                    b.Property<float>("Rating");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("TagsCsv");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("MyMusic.EFCoreCodeFirst.Artist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("MyMusic.EFCoreCodeFirst.Song", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlbumId");

                    b.Property<long?>("ArtistId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("Name");

                    b.Property<float>("PopularityPerc");

                    b.Property<float>("Price");

                    b.Property<TimeSpan>("Time");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("MyMusic.EFCoreCodeFirst.Album", b =>
                {
                    b.HasOne("MyMusic.EFCoreCodeFirst.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("MyMusic.EFCoreCodeFirst.Song", b =>
                {
                    b.HasOne("MyMusic.EFCoreCodeFirst.Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("MyMusic.EFCoreCodeFirst.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId");
                });
#pragma warning restore 612, 618
        }
    }
}
